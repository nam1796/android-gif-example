buildscript {
  rootProject.ext.ci = rootProject.hasProperty("ci")

  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:2.3.0-beta2"
    classpath "com.novoda:gradle-android-command-plugin:1.7.0"
    classpath "com.github.triplet.gradle:play-publisher:1.1.5"
    classpath "com.gradle:build-scan-plugin:1.4"
    classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2"
    classpath "com.vanniktech:gradle-android-apk-size-plugin:0.3.0"
    classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.7.1"
    classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.8"
    classpath "com.github.ben-manes:gradle-versions-plugin:0.13.0"
  }
}

repositories {
  maven { url "https://plugins.gradle.org/m2/" }
}

// Variables for entire project
ext {
  // SDK versions
  minSdkVersion = 14
  targetSdkVersion = 25
  compileSdkVersion = 25
  buildToolsVersion = "25.0.1"
  sourceCompatibilityVersion = JavaVersion.VERSION_1_7
  targetCompatibilityVersion = JavaVersion.VERSION_1_7
  debugKeystoreUser = "androiddebugkey"
  debugKeystorePass = "android"

  // Common versions
  supportLibraryVersion = "25.1.0"
  firebaseVersion = "10.0.0"
  butterKnifeVersion = "8.4.0"
  daggerVersion = "2.8"
  okHttpVersion = "3.5.0"
  retrofitVersion = "2.1.0"
  rxJava2Version = "2.0.1"
  rxJavaVersion = "1.2.2"
  espressoVersion = "2.2.2"
  leakCanaryVersion = "1.4"
  dexmakerVersion = "1.2"
}

// Dependencies
ext.deps = [
  // compile
  // - Android/Google
  design                 : "com.android.support:design:${supportLibraryVersion}",
  appcompatv7            : "com.android.support:appcompat-v7:${supportLibraryVersion}",
  supportv4              : "com.android.support:support-v4:${supportLibraryVersion}",
  recyclerviewv7         : "com.android.support:recyclerview-v7:${supportLibraryVersion}",
  cardviewv7             : "com.android.support:cardview-v7:${supportLibraryVersion}",
  supportAnnotations     : "com.android.support:support-annotations:${supportLibraryVersion}",
  firebaseCore           : "com.google.firebase:firebase-core:${firebaseVersion}",
  firebaseCrash          : "com.google.firebase:firebase-crash:${firebaseVersion}",
  firebaseAds            : "com.google.firebase:firebase-ads:${firebaseVersion}",
  // - Other
  butterknife            : "com.jakewharton:butterknife:${butterKnifeVersion}",
  rxAndroid              : "io.reactivex.rxjava2:rxandroid:${rxJava2Version}",
  rxJava                 : "io.reactivex.rxjava2:rxjava:${rxJava2Version}",
  rxRelay                : "com.jakewharton.rxrelay2:rxrelay:2.0.0",
  aboutlibraries         : "com.mikepenz:aboutlibraries:5.8.1",
  androidSdk             : "io.doorbell:android-sdk:0.2.6",
  appintro               : "com.github.paolorotolo:appintro:3.4.0",
  logger                 : "com.orhanobut:logger:1.15",
  dagger                 : "com.google.dagger:dagger:${daggerVersion}",
  okhttp                 : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
  loggingInterceptor     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
  retrofit               : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
  converterGson          : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
  retrofit2Rxjava2Adapter: "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0",
  androidGifDrawable     : "pl.droidsonroids.gif:android-gif-drawable:1.2.3",
  glide                  : "com.github.bumptech.glide:glide:3.7.0",
  okhttp3Integration     : "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar",

  // annotationProcessor
  butterknifeCompiler    : "com.jakewharton:butterknife-compiler:${butterKnifeVersion}",
  daggerCompiler         : "com.google.dagger:dagger-compiler:${daggerVersion}",

  // androidTestCompile
  dexmaker               : "com.google.dexmaker:dexmaker:${dexmakerVersion}",
  dexmakerMockito        : "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
  espressoCore           : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
  espressoIntents        : "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
  espressoContrib        : "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
  testingSupportLib      : "com.android.support.test:testing-support-lib:0.1",
  runner                 : "com.android.support.test:runner:0.5",

  // testCompile
  leakcanaryAndroid      : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
  leakcanaryAndroidNoOp  : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
  junit                  : "junit:junit:4.12",
  mockitoCore            : "org.mockito:mockito-core:2.6.8",
  assertjCore            : "org.assertj:assertj-core:1.7.1",
  equalsverifier         : "nl.jqno.equalsverifier:equalsverifier:2.2",
  mockwebserver          : "com.squareup.okhttp3:mockwebserver:${okHttpVersion}",
]

apply from: rootProject.file("gradle/buildScan.gradle")
apply plugin: "com.android.application"
apply plugin: "android-command"
apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/codeQuality.gradle")
apply from: rootProject.file("gradle/publishing.gradle")
apply plugin: "com.github.triplet.play"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.vanniktech.android.apk.size"
apply plugin: "net.ltgt.errorprone"
apply plugin: "com.github.ben-manes.versions"

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "burrows.apps.example.gif"
    versionCode 1
    versionName "1.0"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    testApplicationId "burrows.apps.example.gif.test"
    testInstrumentationRunner "test.CustomTestRunner"
    resConfigs "en" // Keep only english resource files for now

    vectorDrawables {
      useSupportLibrary = true
    }

    jackOptions {
      enabled = true
    }
  }

  dataBinding {
    enabled = true
  }

  compileOptions {
    sourceCompatibility rootProject.ext.sourceCompatibilityVersion
    targetCompatibility rootProject.ext.sourceCompatibilityVersion
  }

  dexOptions {
    preDexLibraries !rootProject.ext.ci
  }

  lintOptions {
    textReport true
    textOutput "stdout"
    checkAllWarnings true
    warningsAsErrors true
    showAll true
    explainIssues true
    disable "UnusedResources"              // Unused will be removed on release
    disable "IconExpectedSize"             // Using the material icons provided from Google
    disable "GoogleAppIndexingApiWarning"  // We might want to index our app later
    disable "InvalidPackage"               // Butterknife, Okio and Realm
    disable "ResourceType"                 // Annotation binding
    disable "GradleDependency"
    disable "NewerVersionAvailable"
    disable "PropertyEscape"               // CI issue with sdk.dir in local.properties
  }

  // Debug - testing and letting others use
  signingConfigs {
    debug {
      storeFile rootProject.file(".buildscript/debug.keystore")
      storePassword rootProject.ext.debugKeystorePass
      keyAlias rootProject.ext.debugKeystoreUser
      keyPassword rootProject.ext.debugKeystorePass
    }
  }

  buildTypes {
    debug {
      debuggable true
      testCoverageEnabled true // generated coverage for android tests
      applicationIdSuffix ".debug"
    }

    release {
      minifyEnabled false
      proguardFile getDefaultProguardFile("proguard-android-optimize.txt")
      proguardFile "proguard-rules.txt"
      signingConfig signingConfigs.debug
    }
  }

  testOptions {
    unitTests {
      returnDefaultValues = true
      all {
        jacoco {
          includeNoLocationClasses = true
        }
      }
    }
  }

  packagingOptions {
    exclude "**/*.txt"
    exclude "**/*.xml"
    exclude "**/*.properties"
  }
}

// Resolves dependency versions across test and production APKs, specifically, transitive
// dependencies. This is required since Espresso internally has a dependency on support-annotations.
configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

// All direct/transitive dependencies shared between your test and production APKs need to be
// excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
// excluding these dependencies from your test configuration will result in an dex pre-verifier error
// at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
configurations.compile.dependencies.each { compileDependency ->
  configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
    configurations.androidTestCompile.exclude module: "${compileDependency.name}"
  }
}

tasks.withType(com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask) { task ->
  if (task.name.endsWith("AndroidTest")) {
    task.finalizedBy(tasks.create("${task.name}Workaround") {
      doLast {
        task.output.deleteDir()
      }
    })
  }
}

dependencies {
  // Android/Google
  compile deps.design
  compile deps.cardviewv7
  compile deps.supportv4
  compile deps.recyclerviewv7
  compile deps.supportAnnotations
  // Other
  compile deps.okhttp
  compile deps.loggingInterceptor
  compile deps.retrofit2Rxjava2Adapter
  compile deps.converterGson
  compile deps.retrofit
  compile deps.rxAndroid
  compile deps.rxJava
  compile deps.androidGifDrawable
  compile deps.glide
  compile deps.okhttp3Integration
  compile deps.dagger

  annotationProcessor deps.daggerCompiler

  debugCompile deps.leakcanaryAndroid
  releaseCompile deps.leakcanaryAndroidNoOp

  androidTestCompile deps.junit
  androidTestCompile deps.assertjCore
  androidTestCompile deps.dexmaker
  androidTestCompile deps.dexmakerMockito
  androidTestCompile deps.runner
  androidTestCompile deps.espressoCore
  androidTestCompile deps.espressoIntents
  androidTestCompile(deps.espressoContrib) { exclude group: "com.android.support" }
  androidTestCompile deps.mockwebserver
  androidTestCompile deps.dagger

  androidTestAnnotationProcessor deps.daggerCompiler

  testCompile deps.junit
  testCompile deps.mockitoCore
  testCompile deps.assertjCore
  testCompile deps.leakcanaryAndroidNoOp
  testCompile deps.equalsverifier
  testCompile deps.mockwebserver
}
